# docker build -t hadabot/ros2-codeserver --build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g) .
# docker run -it --rm -p 6081:8080 -v `pwd`/..:hadabot_main hadabot/ros2-codeserver

ARG FROM_IMAGE=ubuntu:bionic

FROM $FROM_IMAGE AS cache

ARG USER_ID
ARG GROUP_ID

# Check for mandatory build arguments
RUN : "${USER_ID:?Build argument needs to be set and non-empty.}" && \
    : "${GROUP_ID:?Build argument needs to be set and non-empty.}"

RUN apt-get update && \
    apt-get install -y locales curl gnupg2 lsb-release wget git sudo unzip && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \
    export LANG=en_US.UTF-8 && \
    curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -  && \
    sh -c 'echo "deb http://packages.ros.org/ros2/ubuntu `lsb_release -cs` main" > /etc/apt/sources.list.d/ros2-latest.list' && \
    rm -rf /var/lib/apt/lists/*

ENV LANG en_US.UTF-8

# Some ROS environment variables
ENV ROS_DISTRO="eloquent"
ENV ROS_PYTHON_VERSION="3"
ENV ROS_VERSION="2"

# Error with a ros1-bridge dependency if we install ros-eloquent-ros2bag*
# so install each package individually igoring the package with the 
# ros1-bridge dependency
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata && \
    apt-get install -y ros-${ROS_DISTRO}-ros-base ros-${ROS_DISTRO}-ros2bag \
        ros-${ROS_DISTRO}-rosbag2-storage-default-plugins-dbgsym \
        ros-${ROS_DISTRO}-rosbag2-test-common \
        ros-${ROS_DISTRO}-rosbag2-converter-default-plugins \
        ros-${ROS_DISTRO}-rosbag2-tests \
        ros-${ROS_DISTRO}-rosbag2-dbgsym \
        ros-${ROS_DISTRO}-rosbag2-storage-dbgsym \
        ros-${ROS_DISTRO}-rosbag2-storage \
        ros-${ROS_DISTRO}-rosbag2-storage-default-plugins \
        ros-${ROS_DISTRO}-rosbag2 \
        ros-${ROS_DISTRO}-rosbag2-converter-default-plugins-dbgsym \
        ros-${ROS_DISTRO}-rosbag2-transport \
        ros-${ROS_DISTRO}-rosbag2-transport-dbgsym \
        python3-argcomplete python3-colcon-common-extensions && \
    rm -rf /var/lib/apt/lists/*

# Set up hadabot user

ENV SHELL=/bin/bash

RUN addgroup --gid $GROUP_ID hadabot && \
    adduser --gecos '' --disabled-password --uid $USER_ID --gid $GROUP_ID hadabot && \
    adduser hadabot sudo && \
    echo "hadabot ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/nopasswd

WORKDIR /root

RUN wget https://github.com/cdr/code-server/releases/download/3.1.1/code-server-3.1.1-linux-x86_64.tar.gz && \
    tar -xzf code-server*.tar.gz && \
    rm code-server*.tar.gz && \
    mv code-server* /usr/local/lib/code-server && \
    ln -s /usr/local/lib/code-server/code-server /usr/local/bin/code-server

USER hadabot

WORKDIR /home/hadabot
ENV HOME=$WORKDIR

RUN code-server --install-extension ms-vscode.cpptools && \
    code-server --install-extension twxs.cmake

# Install ROS vscode extension
COPY --chown=hadabot:hadabot ./config_files/vscode-ros-dev-vsix.zip ./
RUN unzip vscode-ros-dev-vsix.zip && \
    code-server --install-extension vscode-ros-dev.vsix && \
    rm vscode-ros-dev*.*

COPY --chown=hadabot:hadabot ./config_files/coder.json .local/share/code-server/
COPY --chown=hadabot:hadabot ./config_files/settings.json .local/share/code-server/User/

CMD ["code-server", "--host", "0.0.0.0", "--auth", "none", "--disable-ssh", "--disable-updates"]